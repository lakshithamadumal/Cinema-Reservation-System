/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guiManager;

import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.mySQL;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Date;
import javax.swing.JOptionPane;
import model.mySQL;

/**
 *
 * @author wajir
 */
public class ReadQRCode extends javax.swing.JFrame implements Runnable, ThreadFactory {

    private Webcam webcam = null;
    private WebcamPanel panel = null;
    private Executor executor = Executors.newSingleThreadExecutor(this);

    public ReadQRCode() {
        initComponents();
        initWebcam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 598));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.CardLayout(11, 11));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Attendence");
        jPanel4.add(jLabel3, "card2");

        jPanel3.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        jPanel5.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 209, 36));

        jButton1.setBackground(new java.awt.Color(24, 119, 242));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 209, 44));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0), 11));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 400));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 209, 201));

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            jTextField1.isEnabled();
            String Qrcode = jTextField1.getText();

            Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            LocalTime nowtime = LocalTime.now();
            long hours = nowtime.getHour();
            String Result = jTextField1.getText();
            ResultSet resultSet1 = mySQL.executeSearch("SELECT * FROM `employee` WHERE `qrnumber`='" + Qrcode + "' ");

            if (Result.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please scan your qr code.", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (resultSet1.next()) {

                if (hours > 0 && hours < 8) {
                    ResultSet resultSet_InTime = mySQL.executeSearch("SELECT * FROM employye_attendce "
                            + "WHERE `date`='" + sdf.format(date) + "' AND "
                            + "intime BETWEEN (CAST('00:00:00' AS time)) AND \n"
                            + "(CAST('08:00:00' AS time)); ");
                    if (resultSet_InTime.next()) {
                        JOptionPane.showMessageDialog(this, "you marked attendce today.", "Warning", JOptionPane.WARNING_MESSAGE);

                    } else {
                        mySQL.executeIUD("INSERT INTO `employye_attendce`( `qrnumber`,`date`,`intime`)"
                                + "VALUES('" + Qrcode + "','" + sdf.format(date) + "','" + nowtime + "')");
                        JOptionPane.showMessageDialog(this, "Attendce marking is successufull.", "Warning", JOptionPane.WARNING_MESSAGE);

                    }
                } else if (hours >= 8 && hours < 16) {

                    ResultSet resultSet_WORKTime = mySQL.executeSearch("SELECT * FROM employye_attendce "
                            + "WHERE `date`='" + sdf.format(date) + "' AND "
                            + "intime BETWEEN (CAST('00:00:00' AS time)) AND \n"
                            + "(CAST('16:00:00' AS time))  ");
                    if (resultSet_WORKTime.next()) {

                        ResultSet resultSet_HALFOUTTime = mySQL.executeSearch("SELECT * FROM employye_attendce "
                                + "WHERE `qrnumber`='" + Qrcode + "' AND  `date`='" + sdf.format(date) + "' AND "
                                + "outtime BETWEEN (CAST('8:00:00' AS time)) AND \n"
                                + "(CAST('16:00:00' AS time))  ");

                        if (resultSet_HALFOUTTime.next()) {
                            JOptionPane.showMessageDialog(this, "You have marked your departure.", "Warning", JOptionPane.WARNING_MESSAGE);

                        } else {

                            mySQL.executeIUD("UPDATE `employye_attendce` SET `outtime`='" + nowtime + "' WHERE `qrnumber`='" + Qrcode + "' AND `date`='" + sdf.format(date) + "'");
                            JOptionPane.showMessageDialog(this, "Departure time marking successful.(HALH TIME)", "Warning", JOptionPane.WARNING_MESSAGE);

                        }

                    } else {
                        mySQL.executeIUD("INSERT INTO `employye_attendce`( `qrnumber`,`date`,`intime`)"
                                + "VALUES('" + Qrcode + "','" + sdf.format(date) + "','" + nowtime + "')");
                        JOptionPane.showMessageDialog(this, "Attendce marking is successufull.(LATE)", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                } else {
                    ResultSet resultSet_NOTWORKTime = mySQL.executeSearch("SELECT * FROM employye_attendce "
                            + "WHERE `date`='" + sdf.format(date) + "' AND "
                            + "intime BETWEEN (CAST('00:00:00' AS time)) AND \n"
                            + "(CAST('19:00:00' AS time))  ");

                    if (resultSet_NOTWORKTime.next()) {

                        ResultSet resultSet_FULLOUTTime = mySQL.executeSearch("SELECT * FROM employye_attendce "
                                + "WHERE `qrnumber`='" + Qrcode + "' AND  `date`='" + sdf.format(date) + "' AND "
                                + "outtime BETWEEN (CAST('14:00:00' AS time)) AND \n"
                                + "(CAST('23:59:00' AS time))  ");
                        if (resultSet_FULLOUTTime.next()) {

                            JOptionPane.showMessageDialog(this, "You have marked your departure.", "Warning", JOptionPane.WARNING_MESSAGE);

                        } else {

                            mySQL.executeIUD("UPDATE `employye_attendce` SET `outtime`='" + nowtime + "' WHERE `qrnumber`='" + Qrcode + "' AND `date`='" + sdf.format(date) + "'");
                            JOptionPane.showMessageDialog(this, "Departure time marking successful.", "Warning", JOptionPane.WARNING_MESSAGE);

                        }

                    } else {

                        JOptionPane.showMessageDialog(this, "YOU HAVE NOT MARKED THE IN TIME.", "Warning", JOptionPane.WARNING_MESSAGE);

                    }

                }

            } else {

                JOptionPane.showMessageDialog(this, "UNREGISTERD", "Warning", JOptionPane.WARNING_MESSAGE);

            }
//        if(resultSet1.next()){
//            
//             MySQL2.executeIUD("INSERT INTO `employye_attendce`( `qrnumber`,`date`)"
//                            + "VALUES('" + Qrcode  + "','" + sdf.format(date) + "')");
//            
//          JOptionPane.showMessageDialog(this, "MARKED", "Warning", JOptionPane.WARNING_MESSAGE);
//
//          
//          
//        }else{
//            
//      
//   JOptionPane.showMessageDialog(this, "UUUUNNNNNNNNNNNNNNNNNMARKED", "Warning", JOptionPane.WARNING_MESSAGE);
//
//     
//        }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatMacDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReadQRCode().setVisible(true);
            }
        });
    }

    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);

        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);

        jPanel2.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 300));
        executor.execute(this);
    }

    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(ReadQRCode.class.getName()).log(Level.SEVERE, null, ex);
            }
            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }

            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException ex) {
                Logger.getLogger(ReadQRCode.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (result != null) {
                jTextField1.setText(result.getText());
            }

        } while (true);
    }

    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
